// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetStreamIDReader is a Reader for the GetStreamID structure.
type GetStreamIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStreamIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStreamIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetStreamIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStreamIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStreamIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStreamIDOK creates a GetStreamIDOK with default headers values
func NewGetStreamIDOK() *GetStreamIDOK {
	return &GetStreamIDOK{}
}

/*GetStreamIDOK handles this case with default header values.

JSON-formatted data about the given stream
*/
type GetStreamIDOK struct {
}

func (o *GetStreamIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/searches/{stream-id}][%d] getStreamIdOK ", 200)
}

func (o *GetStreamIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStreamIDUnauthorized creates a GetStreamIDUnauthorized with default headers values
func NewGetStreamIDUnauthorized() *GetStreamIDUnauthorized {
	return &GetStreamIDUnauthorized{}
}

/*GetStreamIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type GetStreamIDUnauthorized struct {
}

func (o *GetStreamIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/searches/{stream-id}][%d] getStreamIdUnauthorized ", 401)
}

func (o *GetStreamIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStreamIDNotFound creates a GetStreamIDNotFound with default headers values
func NewGetStreamIDNotFound() *GetStreamIDNotFound {
	return &GetStreamIDNotFound{}
}

/*GetStreamIDNotFound handles this case with default header values.

Project name is not found
*/
type GetStreamIDNotFound struct {
}

func (o *GetStreamIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/searches/{stream-id}][%d] getStreamIdNotFound ", 404)
}

func (o *GetStreamIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStreamIDInternalServerError creates a GetStreamIDInternalServerError with default headers values
func NewGetStreamIDInternalServerError() *GetStreamIDInternalServerError {
	return &GetStreamIDInternalServerError{}
}

/*GetStreamIDInternalServerError handles this case with default header values.

The stream identifier is not valid
*/
type GetStreamIDInternalServerError struct {
}

func (o *GetStreamIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/searches/{stream-id}][%d] getStreamIdInternalServerError ", 500)
}

func (o *GetStreamIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
