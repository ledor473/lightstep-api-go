// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ledor473/lightstep-api-go/v0.1/models"
)

// NewPostSearchParams creates a new PostSearchParams object
// with the default values initialized.
func NewPostSearchParams() *PostSearchParams {
	var ()
	return &PostSearchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostSearchParamsWithTimeout creates a new PostSearchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostSearchParamsWithTimeout(timeout time.Duration) *PostSearchParams {
	var ()
	return &PostSearchParams{

		timeout: timeout,
	}
}

// NewPostSearchParamsWithContext creates a new PostSearchParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostSearchParamsWithContext(ctx context.Context) *PostSearchParams {
	var ()
	return &PostSearchParams{

		Context: ctx,
	}
}

// NewPostSearchParamsWithHTTPClient creates a new PostSearchParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostSearchParamsWithHTTPClient(client *http.Client) *PostSearchParams {
	var ()
	return &PostSearchParams{
		HTTPClient: client,
	}
}

/*PostSearchParams contains all the parameters to send to the API endpoint
for the post search operation typically these are written to a http.Request
*/
type PostSearchParams struct {

	/*Data
	  Stream definition

	*/
	Data *models.CreateOrUpdateBody
	/*Organization
	  Name of the customer organization

	*/
	Organization string
	/*Project
	  Name of the customer project

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post search params
func (o *PostSearchParams) WithTimeout(timeout time.Duration) *PostSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post search params
func (o *PostSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post search params
func (o *PostSearchParams) WithContext(ctx context.Context) *PostSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post search params
func (o *PostSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post search params
func (o *PostSearchParams) WithHTTPClient(client *http.Client) *PostSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post search params
func (o *PostSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the post search params
func (o *PostSearchParams) WithData(data *models.CreateOrUpdateBody) *PostSearchParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the post search params
func (o *PostSearchParams) SetData(data *models.CreateOrUpdateBody) {
	o.Data = data
}

// WithOrganization adds the organization to the post search params
func (o *PostSearchParams) WithOrganization(organization string) *PostSearchParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the post search params
func (o *PostSearchParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the post search params
func (o *PostSearchParams) WithProject(project string) *PostSearchParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the post search params
func (o *PostSearchParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *PostSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
