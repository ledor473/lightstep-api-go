// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSearchIDReader is a Reader for the DeleteSearchID structure.
type DeleteSearchIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSearchIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSearchIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteSearchIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSearchIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSearchIDNoContent creates a DeleteSearchIDNoContent with default headers values
func NewDeleteSearchIDNoContent() *DeleteSearchIDNoContent {
	return &DeleteSearchIDNoContent{}
}

/*DeleteSearchIDNoContent handles this case with default header values.

Stream was successfully deleted
*/
type DeleteSearchIDNoContent struct {
}

func (o *DeleteSearchIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/searches/{stream-id}][%d] deleteSearchIdNoContent ", 204)
}

func (o *DeleteSearchIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSearchIDUnauthorized creates a DeleteSearchIDUnauthorized with default headers values
func NewDeleteSearchIDUnauthorized() *DeleteSearchIDUnauthorized {
	return &DeleteSearchIDUnauthorized{}
}

/*DeleteSearchIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type DeleteSearchIDUnauthorized struct {
}

func (o *DeleteSearchIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/searches/{stream-id}][%d] deleteSearchIdUnauthorized ", 401)
}

func (o *DeleteSearchIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSearchIDNotFound creates a DeleteSearchIDNotFound with default headers values
func NewDeleteSearchIDNotFound() *DeleteSearchIDNotFound {
	return &DeleteSearchIDNotFound{}
}

/*DeleteSearchIDNotFound handles this case with default header values.

Project name is not found
*/
type DeleteSearchIDNotFound struct {
}

func (o *DeleteSearchIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/searches/{stream-id}][%d] deleteSearchIdNotFound ", 404)
}

func (o *DeleteSearchIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
