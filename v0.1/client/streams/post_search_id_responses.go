// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostSearchIDReader is a Reader for the PostSearchID structure.
type PostSearchIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSearchIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSearchIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostSearchIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSearchIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSearchIDOK creates a PostSearchIDOK with default headers values
func NewPostSearchIDOK() *PostSearchIDOK {
	return &PostSearchIDOK{}
}

/*PostSearchIDOK handles this case with default header values.

The stream was created (or updated) successfully
*/
type PostSearchIDOK struct {
}

func (o *PostSearchIDOK) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/searches][%d] postSearchIdOK ", 200)
}

func (o *PostSearchIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSearchIDUnauthorized creates a PostSearchIDUnauthorized with default headers values
func NewPostSearchIDUnauthorized() *PostSearchIDUnauthorized {
	return &PostSearchIDUnauthorized{}
}

/*PostSearchIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type PostSearchIDUnauthorized struct {
}

func (o *PostSearchIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/searches][%d] postSearchIdUnauthorized ", 401)
}

func (o *PostSearchIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSearchIDNotFound creates a PostSearchIDNotFound with default headers values
func NewPostSearchIDNotFound() *PostSearchIDNotFound {
	return &PostSearchIDNotFound{}
}

/*PostSearchIDNotFound handles this case with default header values.

Project name is not found
*/
type PostSearchIDNotFound struct {
}

func (o *PostSearchIDNotFound) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/searches][%d] postSearchIdNotFound ", 404)
}

func (o *PostSearchIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
