// Code generated by go-swagger; DO NOT EDIT.

package traces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// StoredTracesIDReader is a Reader for the StoredTracesID structure.
type StoredTracesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoredTracesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoredTracesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoredTracesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoredTracesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStoredTracesIDOK creates a StoredTracesIDOK with default headers values
func NewStoredTracesIDOK() *StoredTracesIDOK {
	return &StoredTracesIDOK{}
}

/*StoredTracesIDOK handles this case with default header values.

JSON representation of a stored trace
*/
type StoredTracesIDOK struct {
}

func (o *StoredTracesIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/stored-traces][%d] storedTracesIdOK ", 200)
}

func (o *StoredTracesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStoredTracesIDBadRequest creates a StoredTracesIDBadRequest with default headers values
func NewStoredTracesIDBadRequest() *StoredTracesIDBadRequest {
	return &StoredTracesIDBadRequest{}
}

/*StoredTracesIDBadRequest handles this case with default header values.

Missing required parameter
*/
type StoredTracesIDBadRequest struct {
}

func (o *StoredTracesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/stored-traces][%d] storedTracesIdBadRequest ", 400)
}

func (o *StoredTracesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStoredTracesIDNotFound creates a StoredTracesIDNotFound with default headers values
func NewStoredTracesIDNotFound() *StoredTracesIDNotFound {
	return &StoredTracesIDNotFound{}
}

/*StoredTracesIDNotFound handles this case with default header values.

No stored traces found
*/
type StoredTracesIDNotFound struct {
}

func (o *StoredTracesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/stored-traces][%d] storedTracesIdNotFound ", 404)
}

func (o *StoredTracesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
