// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListServicesIDReader is a Reader for the ListServicesID structure.
type ListServicesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServicesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServicesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListServicesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListServicesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListServicesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListServicesIDOK creates a ListServicesIDOK with default headers values
func NewListServicesIDOK() *ListServicesIDOK {
	return &ListServicesIDOK{}
}

/*ListServicesIDOK handles this case with default header values.

JSON-formatted metadata about all services reporting in the project
*/
type ListServicesIDOK struct {
}

func (o *ListServicesIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/directory/services][%d] listServicesIdOK ", 200)
}

func (o *ListServicesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListServicesIDBadRequest creates a ListServicesIDBadRequest with default headers values
func NewListServicesIDBadRequest() *ListServicesIDBadRequest {
	return &ListServicesIDBadRequest{}
}

/*ListServicesIDBadRequest handles this case with default header values.

One or more parameter(s) are not valid
*/
type ListServicesIDBadRequest struct {
}

func (o *ListServicesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/directory/services][%d] listServicesIdBadRequest ", 400)
}

func (o *ListServicesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListServicesIDUnauthorized creates a ListServicesIDUnauthorized with default headers values
func NewListServicesIDUnauthorized() *ListServicesIDUnauthorized {
	return &ListServicesIDUnauthorized{}
}

/*ListServicesIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListServicesIDUnauthorized struct {
}

func (o *ListServicesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/directory/services][%d] listServicesIdUnauthorized ", 401)
}

func (o *ListServicesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListServicesIDNotFound creates a ListServicesIDNotFound with default headers values
func NewListServicesIDNotFound() *ListServicesIDNotFound {
	return &ListServicesIDNotFound{}
}

/*ListServicesIDNotFound handles this case with default header values.

Project name is not found
*/
type ListServicesIDNotFound struct {
}

func (o *ListServicesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/directory/services][%d] listServicesIdNotFound ", 404)
}

func (o *ListServicesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
