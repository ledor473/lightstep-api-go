// Code generated by go-swagger; DO NOT EDIT.

package conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetConditionIDParams creates a new GetConditionIDParams object
// with the default values initialized.
func NewGetConditionIDParams() *GetConditionIDParams {
	var ()
	return &GetConditionIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConditionIDParamsWithTimeout creates a new GetConditionIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConditionIDParamsWithTimeout(timeout time.Duration) *GetConditionIDParams {
	var ()
	return &GetConditionIDParams{

		timeout: timeout,
	}
}

// NewGetConditionIDParamsWithContext creates a new GetConditionIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetConditionIDParamsWithContext(ctx context.Context) *GetConditionIDParams {
	var ()
	return &GetConditionIDParams{

		Context: ctx,
	}
}

// NewGetConditionIDParamsWithHTTPClient creates a new GetConditionIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetConditionIDParamsWithHTTPClient(client *http.Client) *GetConditionIDParams {
	var ()
	return &GetConditionIDParams{
		HTTPClient: client,
	}
}

/*GetConditionIDParams contains all the parameters to send to the API endpoint
for the get condition ID operation typically these are written to a http.Request
*/
type GetConditionIDParams struct {

	/*ConditionID
	  Condition identifier

	*/
	ConditionID string
	/*Organization
	  Name of the customer organization

	*/
	Organization string
	/*Project
	  Name of the customer project

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get condition ID params
func (o *GetConditionIDParams) WithTimeout(timeout time.Duration) *GetConditionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get condition ID params
func (o *GetConditionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get condition ID params
func (o *GetConditionIDParams) WithContext(ctx context.Context) *GetConditionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get condition ID params
func (o *GetConditionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get condition ID params
func (o *GetConditionIDParams) WithHTTPClient(client *http.Client) *GetConditionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get condition ID params
func (o *GetConditionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConditionID adds the conditionID to the get condition ID params
func (o *GetConditionIDParams) WithConditionID(conditionID string) *GetConditionIDParams {
	o.SetConditionID(conditionID)
	return o
}

// SetConditionID adds the conditionId to the get condition ID params
func (o *GetConditionIDParams) SetConditionID(conditionID string) {
	o.ConditionID = conditionID
}

// WithOrganization adds the organization to the get condition ID params
func (o *GetConditionIDParams) WithOrganization(organization string) *GetConditionIDParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get condition ID params
func (o *GetConditionIDParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the get condition ID params
func (o *GetConditionIDParams) WithProject(project string) *GetConditionIDParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get condition ID params
func (o *GetConditionIDParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *GetConditionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param condition-id
	if err := r.SetPathParam("condition-id", o.ConditionID); err != nil {
		return err
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
