// Code generated by go-swagger; DO NOT EDIT.

package conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetConditionIDReader is a Reader for the GetConditionID structure.
type GetConditionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConditionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConditionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetConditionIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConditionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConditionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConditionIDOK creates a GetConditionIDOK with default headers values
func NewGetConditionIDOK() *GetConditionIDOK {
	return &GetConditionIDOK{}
}

/*GetConditionIDOK handles this case with default header values.

JSON-formatted data about the given condition
*/
type GetConditionIDOK struct {
}

func (o *GetConditionIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}][%d] getConditionIdOK ", 200)
}

func (o *GetConditionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConditionIDUnauthorized creates a GetConditionIDUnauthorized with default headers values
func NewGetConditionIDUnauthorized() *GetConditionIDUnauthorized {
	return &GetConditionIDUnauthorized{}
}

/*GetConditionIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type GetConditionIDUnauthorized struct {
}

func (o *GetConditionIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}][%d] getConditionIdUnauthorized ", 401)
}

func (o *GetConditionIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConditionIDNotFound creates a GetConditionIDNotFound with default headers values
func NewGetConditionIDNotFound() *GetConditionIDNotFound {
	return &GetConditionIDNotFound{}
}

/*GetConditionIDNotFound handles this case with default header values.

Project name is not found
*/
type GetConditionIDNotFound struct {
}

func (o *GetConditionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}][%d] getConditionIdNotFound ", 404)
}

func (o *GetConditionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConditionIDInternalServerError creates a GetConditionIDInternalServerError with default headers values
func NewGetConditionIDInternalServerError() *GetConditionIDInternalServerError {
	return &GetConditionIDInternalServerError{}
}

/*GetConditionIDInternalServerError handles this case with default header values.

The condition identifier is not valid
*/
type GetConditionIDInternalServerError struct {
}

func (o *GetConditionIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}][%d] getConditionIdInternalServerError ", 500)
}

func (o *GetConditionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
