// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// TestReadIDReader is a Reader for the TestReadID structure.
type TestReadIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestReadIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestReadIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTestReadIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestReadIDOK creates a TestReadIDOK with default headers values
func NewTestReadIDOK() *TestReadIDOK {
	return &TestReadIDOK{}
}

/*TestReadIDOK handles this case with default header values.

OK!
*/
type TestReadIDOK struct {
}

func (o *TestReadIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/test][%d] testReadIdOK ", 200)
}

func (o *TestReadIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestReadIDUnauthorized creates a TestReadIDUnauthorized with default headers values
func NewTestReadIDUnauthorized() *TestReadIDUnauthorized {
	return &TestReadIDUnauthorized{}
}

/*TestReadIDUnauthorized handles this case with default header values.

Unauthorized
*/
type TestReadIDUnauthorized struct {
}

func (o *TestReadIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/test][%d] testReadIdUnauthorized ", 401)
}

func (o *TestReadIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
