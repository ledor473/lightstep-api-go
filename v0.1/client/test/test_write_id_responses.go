// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// TestWriteIDReader is a Reader for the TestWriteID structure.
type TestWriteIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestWriteIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestWriteIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTestWriteIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestWriteIDOK creates a TestWriteIDOK with default headers values
func NewTestWriteIDOK() *TestWriteIDOK {
	return &TestWriteIDOK{}
}

/*TestWriteIDOK handles this case with default header values.

OK!
*/
type TestWriteIDOK struct {
}

func (o *TestWriteIDOK) Error() string {
	return fmt.Sprintf("[POST /{organization}/test][%d] testWriteIdOK ", 200)
}

func (o *TestWriteIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestWriteIDUnauthorized creates a TestWriteIDUnauthorized with default headers values
func NewTestWriteIDUnauthorized() *TestWriteIDUnauthorized {
	return &TestWriteIDUnauthorized{}
}

/*TestWriteIDUnauthorized handles this case with default header values.

Unauthorized
*/
type TestWriteIDUnauthorized struct {
}

func (o *TestWriteIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{organization}/test][%d] testWriteIdUnauthorized ", 401)
}

func (o *TestWriteIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
