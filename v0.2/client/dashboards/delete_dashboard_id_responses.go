// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDashboardIDReader is a Reader for the DeleteDashboardID structure.
type DeleteDashboardIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDashboardIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDashboardIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDashboardIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDashboardIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDashboardIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDashboardIDNoContent creates a DeleteDashboardIDNoContent with default headers values
func NewDeleteDashboardIDNoContent() *DeleteDashboardIDNoContent {
	return &DeleteDashboardIDNoContent{}
}

/*DeleteDashboardIDNoContent handles this case with default header values.

Dashboard was successfully deleted
*/
type DeleteDashboardIDNoContent struct {
}

func (o *DeleteDashboardIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/dashboard/{dashboard-id}][%d] deleteDashboardIdNoContent ", 204)
}

func (o *DeleteDashboardIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDashboardIDUnauthorized creates a DeleteDashboardIDUnauthorized with default headers values
func NewDeleteDashboardIDUnauthorized() *DeleteDashboardIDUnauthorized {
	return &DeleteDashboardIDUnauthorized{}
}

/*DeleteDashboardIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type DeleteDashboardIDUnauthorized struct {
}

func (o *DeleteDashboardIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/dashboard/{dashboard-id}][%d] deleteDashboardIdUnauthorized ", 401)
}

func (o *DeleteDashboardIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDashboardIDNotFound creates a DeleteDashboardIDNotFound with default headers values
func NewDeleteDashboardIDNotFound() *DeleteDashboardIDNotFound {
	return &DeleteDashboardIDNotFound{}
}

/*DeleteDashboardIDNotFound handles this case with default header values.

Project name is not found
*/
type DeleteDashboardIDNotFound struct {
}

func (o *DeleteDashboardIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/dashboard/{dashboard-id}][%d] deleteDashboardIdNotFound ", 404)
}

func (o *DeleteDashboardIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDashboardIDInternalServerError creates a DeleteDashboardIDInternalServerError with default headers values
func NewDeleteDashboardIDInternalServerError() *DeleteDashboardIDInternalServerError {
	return &DeleteDashboardIDInternalServerError{}
}

/*DeleteDashboardIDInternalServerError handles this case with default header values.

Dashboard identifier not found
*/
type DeleteDashboardIDInternalServerError struct {
}

func (o *DeleteDashboardIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/dashboard/{dashboard-id}][%d] deleteDashboardIdInternalServerError ", 500)
}

func (o *DeleteDashboardIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
