// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListDashboardsIDReader is a Reader for the ListDashboardsID structure.
type ListDashboardsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDashboardsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDashboardsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDashboardsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDashboardsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListDashboardsIDOK creates a ListDashboardsIDOK with default headers values
func NewListDashboardsIDOK() *ListDashboardsIDOK {
	return &ListDashboardsIDOK{}
}

/*ListDashboardsIDOK handles this case with default header values.

JSON-formatted metadata about all dashboards in the project
*/
type ListDashboardsIDOK struct {
}

func (o *ListDashboardsIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/dashboards][%d] listDashboardsIdOK ", 200)
}

func (o *ListDashboardsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDashboardsIDUnauthorized creates a ListDashboardsIDUnauthorized with default headers values
func NewListDashboardsIDUnauthorized() *ListDashboardsIDUnauthorized {
	return &ListDashboardsIDUnauthorized{}
}

/*ListDashboardsIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListDashboardsIDUnauthorized struct {
}

func (o *ListDashboardsIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/dashboards][%d] listDashboardsIdUnauthorized ", 401)
}

func (o *ListDashboardsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDashboardsIDNotFound creates a ListDashboardsIDNotFound with default headers values
func NewListDashboardsIDNotFound() *ListDashboardsIDNotFound {
	return &ListDashboardsIDNotFound{}
}

/*ListDashboardsIDNotFound handles this case with default header values.

Project name is not found
*/
type ListDashboardsIDNotFound struct {
}

func (o *ListDashboardsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/dashboards][%d] listDashboardsIdNotFound ", 404)
}

func (o *ListDashboardsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
