// Code generated by go-swagger; DO NOT EDIT.

package workflow_links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteWorkflowLinkIDParams creates a new DeleteWorkflowLinkIDParams object
// with the default values initialized.
func NewDeleteWorkflowLinkIDParams() *DeleteWorkflowLinkIDParams {
	var ()
	return &DeleteWorkflowLinkIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteWorkflowLinkIDParamsWithTimeout creates a new DeleteWorkflowLinkIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteWorkflowLinkIDParamsWithTimeout(timeout time.Duration) *DeleteWorkflowLinkIDParams {
	var ()
	return &DeleteWorkflowLinkIDParams{

		timeout: timeout,
	}
}

// NewDeleteWorkflowLinkIDParamsWithContext creates a new DeleteWorkflowLinkIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteWorkflowLinkIDParamsWithContext(ctx context.Context) *DeleteWorkflowLinkIDParams {
	var ()
	return &DeleteWorkflowLinkIDParams{

		Context: ctx,
	}
}

// NewDeleteWorkflowLinkIDParamsWithHTTPClient creates a new DeleteWorkflowLinkIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteWorkflowLinkIDParamsWithHTTPClient(client *http.Client) *DeleteWorkflowLinkIDParams {
	var ()
	return &DeleteWorkflowLinkIDParams{
		HTTPClient: client,
	}
}

/*DeleteWorkflowLinkIDParams contains all the parameters to send to the API endpoint
for the delete workflow link ID operation typically these are written to a http.Request
*/
type DeleteWorkflowLinkIDParams struct {

	/*LinkID
	  Identifier of the workflow link to delete

	*/
	LinkID string
	/*Organization
	  Name of the customer organization

	*/
	Organization string
	/*Project
	  Name of the customer project

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) WithTimeout(timeout time.Duration) *DeleteWorkflowLinkIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) WithContext(ctx context.Context) *DeleteWorkflowLinkIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) WithHTTPClient(client *http.Client) *DeleteWorkflowLinkIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLinkID adds the linkID to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) WithLinkID(linkID string) *DeleteWorkflowLinkIDParams {
	o.SetLinkID(linkID)
	return o
}

// SetLinkID adds the linkId to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) SetLinkID(linkID string) {
	o.LinkID = linkID
}

// WithOrganization adds the organization to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) WithOrganization(organization string) *DeleteWorkflowLinkIDParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) WithProject(project string) *DeleteWorkflowLinkIDParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the delete workflow link ID params
func (o *DeleteWorkflowLinkIDParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteWorkflowLinkIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param link-id
	if err := r.SetPathParam("link-id", o.LinkID); err != nil {
		return err
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
