// Code generated by go-swagger; DO NOT EDIT.

package workflow_links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetWorkflowLinkIDReader is a Reader for the GetWorkflowLinkID structure.
type GetWorkflowLinkIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowLinkIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowLinkIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowLinkIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowLinkIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetWorkflowLinkIDOK creates a GetWorkflowLinkIDOK with default headers values
func NewGetWorkflowLinkIDOK() *GetWorkflowLinkIDOK {
	return &GetWorkflowLinkIDOK{}
}

/*GetWorkflowLinkIDOK handles this case with default header values.

JSON-formatted metadata about the workflow link
*/
type GetWorkflowLinkIDOK struct {
}

func (o *GetWorkflowLinkIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/wf_links/{link-id}][%d] getWorkflowLinkIdOK ", 200)
}

func (o *GetWorkflowLinkIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowLinkIDUnauthorized creates a GetWorkflowLinkIDUnauthorized with default headers values
func NewGetWorkflowLinkIDUnauthorized() *GetWorkflowLinkIDUnauthorized {
	return &GetWorkflowLinkIDUnauthorized{}
}

/*GetWorkflowLinkIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource
*/
type GetWorkflowLinkIDUnauthorized struct {
}

func (o *GetWorkflowLinkIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/wf_links/{link-id}][%d] getWorkflowLinkIdUnauthorized ", 401)
}

func (o *GetWorkflowLinkIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowLinkIDNotFound creates a GetWorkflowLinkIDNotFound with default headers values
func NewGetWorkflowLinkIDNotFound() *GetWorkflowLinkIDNotFound {
	return &GetWorkflowLinkIDNotFound{}
}

/*GetWorkflowLinkIDNotFound handles this case with default header values.

Organization, project name, or workflow link ID is not found
*/
type GetWorkflowLinkIDNotFound struct {
}

func (o *GetWorkflowLinkIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/wf_links/{link-id}][%d] getWorkflowLinkIdNotFound ", 404)
}

func (o *GetWorkflowLinkIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
