// Code generated by go-swagger; DO NOT EDIT.

package conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetConditionStatusIDReader is a Reader for the GetConditionStatusID structure.
type GetConditionStatusIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConditionStatusIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConditionStatusIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetConditionStatusIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConditionStatusIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConditionStatusIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConditionStatusIDOK creates a GetConditionStatusIDOK with default headers values
func NewGetConditionStatusIDOK() *GetConditionStatusIDOK {
	return &GetConditionStatusIDOK{}
}

/*GetConditionStatusIDOK handles this case with default header values.

JSON-formatted data about the status of the given condition
*/
type GetConditionStatusIDOK struct {
}

func (o *GetConditionStatusIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusIdOK ", 200)
}

func (o *GetConditionStatusIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConditionStatusIDUnauthorized creates a GetConditionStatusIDUnauthorized with default headers values
func NewGetConditionStatusIDUnauthorized() *GetConditionStatusIDUnauthorized {
	return &GetConditionStatusIDUnauthorized{}
}

/*GetConditionStatusIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type GetConditionStatusIDUnauthorized struct {
}

func (o *GetConditionStatusIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusIdUnauthorized ", 401)
}

func (o *GetConditionStatusIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConditionStatusIDNotFound creates a GetConditionStatusIDNotFound with default headers values
func NewGetConditionStatusIDNotFound() *GetConditionStatusIDNotFound {
	return &GetConditionStatusIDNotFound{}
}

/*GetConditionStatusIDNotFound handles this case with default header values.

Project name is not found
*/
type GetConditionStatusIDNotFound struct {
}

func (o *GetConditionStatusIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusIdNotFound ", 404)
}

func (o *GetConditionStatusIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConditionStatusIDInternalServerError creates a GetConditionStatusIDInternalServerError with default headers values
func NewGetConditionStatusIDInternalServerError() *GetConditionStatusIDInternalServerError {
	return &GetConditionStatusIDInternalServerError{}
}

/*GetConditionStatusIDInternalServerError handles this case with default header values.

The condition identifier is not valid
*/
type GetConditionStatusIDInternalServerError struct {
}

func (o *GetConditionStatusIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusIdInternalServerError ", 500)
}

func (o *GetConditionStatusIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
