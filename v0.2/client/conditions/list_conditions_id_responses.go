// Code generated by go-swagger; DO NOT EDIT.

package conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListConditionsIDReader is a Reader for the ListConditionsID structure.
type ListConditionsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConditionsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConditionsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListConditionsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListConditionsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListConditionsIDOK creates a ListConditionsIDOK with default headers values
func NewListConditionsIDOK() *ListConditionsIDOK {
	return &ListConditionsIDOK{}
}

/*ListConditionsIDOK handles this case with default header values.

JSON-formatted metadata about all conditions in the project
*/
type ListConditionsIDOK struct {
}

func (o *ListConditionsIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions][%d] listConditionsIdOK ", 200)
}

func (o *ListConditionsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConditionsIDUnauthorized creates a ListConditionsIDUnauthorized with default headers values
func NewListConditionsIDUnauthorized() *ListConditionsIDUnauthorized {
	return &ListConditionsIDUnauthorized{}
}

/*ListConditionsIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListConditionsIDUnauthorized struct {
}

func (o *ListConditionsIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions][%d] listConditionsIdUnauthorized ", 401)
}

func (o *ListConditionsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConditionsIDNotFound creates a ListConditionsIDNotFound with default headers values
func NewListConditionsIDNotFound() *ListConditionsIDNotFound {
	return &ListConditionsIDNotFound{}
}

/*ListConditionsIDNotFound handles this case with default header values.

Project name is not found
*/
type ListConditionsIDNotFound struct {
}

func (o *ListConditionsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions][%d] listConditionsIdNotFound ", 404)
}

func (o *ListConditionsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
