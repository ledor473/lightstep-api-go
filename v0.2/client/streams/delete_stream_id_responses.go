// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteStreamIDReader is a Reader for the DeleteStreamID structure.
type DeleteStreamIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStreamIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteStreamIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteStreamIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteStreamIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteStreamIDNoContent creates a DeleteStreamIDNoContent with default headers values
func NewDeleteStreamIDNoContent() *DeleteStreamIDNoContent {
	return &DeleteStreamIDNoContent{}
}

/*DeleteStreamIDNoContent handles this case with default header values.

Stream was successfully deleted
*/
type DeleteStreamIDNoContent struct {
}

func (o *DeleteStreamIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/streams/{stream-id}][%d] deleteStreamIdNoContent ", 204)
}

func (o *DeleteStreamIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStreamIDUnauthorized creates a DeleteStreamIDUnauthorized with default headers values
func NewDeleteStreamIDUnauthorized() *DeleteStreamIDUnauthorized {
	return &DeleteStreamIDUnauthorized{}
}

/*DeleteStreamIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type DeleteStreamIDUnauthorized struct {
}

func (o *DeleteStreamIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/streams/{stream-id}][%d] deleteStreamIdUnauthorized ", 401)
}

func (o *DeleteStreamIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStreamIDNotFound creates a DeleteStreamIDNotFound with default headers values
func NewDeleteStreamIDNotFound() *DeleteStreamIDNotFound {
	return &DeleteStreamIDNotFound{}
}

/*DeleteStreamIDNotFound handles this case with default header values.

Project name is not found
*/
type DeleteStreamIDNotFound struct {
}

func (o *DeleteStreamIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/streams/{stream-id}][%d] deleteStreamIdNotFound ", 404)
}

func (o *DeleteStreamIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
