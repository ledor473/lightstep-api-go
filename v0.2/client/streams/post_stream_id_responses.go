// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostStreamIDReader is a Reader for the PostStreamID structure.
type PostStreamIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStreamIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStreamIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostStreamIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostStreamIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostStreamIDOK creates a PostStreamIDOK with default headers values
func NewPostStreamIDOK() *PostStreamIDOK {
	return &PostStreamIDOK{}
}

/*PostStreamIDOK handles this case with default header values.

The stream was created (or updated) successfully
*/
type PostStreamIDOK struct {
}

func (o *PostStreamIDOK) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/streams][%d] postStreamIdOK ", 200)
}

func (o *PostStreamIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostStreamIDUnauthorized creates a PostStreamIDUnauthorized with default headers values
func NewPostStreamIDUnauthorized() *PostStreamIDUnauthorized {
	return &PostStreamIDUnauthorized{}
}

/*PostStreamIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type PostStreamIDUnauthorized struct {
}

func (o *PostStreamIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/streams][%d] postStreamIdUnauthorized ", 401)
}

func (o *PostStreamIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostStreamIDNotFound creates a PostStreamIDNotFound with default headers values
func NewPostStreamIDNotFound() *PostStreamIDNotFound {
	return &PostStreamIDNotFound{}
}

/*PostStreamIDNotFound handles this case with default header values.

Project name is not found
*/
type PostStreamIDNotFound struct {
}

func (o *PostStreamIDNotFound) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/streams][%d] postStreamIdNotFound ", 404)
}

func (o *PostStreamIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
