// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListStreamsIDReader is a Reader for the ListStreamsID structure.
type ListStreamsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStreamsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListStreamsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListStreamsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListStreamsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListStreamsIDOK creates a ListStreamsIDOK with default headers values
func NewListStreamsIDOK() *ListStreamsIDOK {
	return &ListStreamsIDOK{}
}

/*ListStreamsIDOK handles this case with default header values.

JSON-formatted metadata about all streams in the project
*/
type ListStreamsIDOK struct {
}

func (o *ListStreamsIDOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams][%d] listStreamsIdOK ", 200)
}

func (o *ListStreamsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListStreamsIDUnauthorized creates a ListStreamsIDUnauthorized with default headers values
func NewListStreamsIDUnauthorized() *ListStreamsIDUnauthorized {
	return &ListStreamsIDUnauthorized{}
}

/*ListStreamsIDUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListStreamsIDUnauthorized struct {
}

func (o *ListStreamsIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams][%d] listStreamsIdUnauthorized ", 401)
}

func (o *ListStreamsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListStreamsIDNotFound creates a ListStreamsIDNotFound with default headers values
func NewListStreamsIDNotFound() *ListStreamsIDNotFound {
	return &ListStreamsIDNotFound{}
}

/*ListStreamsIDNotFound handles this case with default header values.

Project name is not found
*/
type ListStreamsIDNotFound struct {
}

func (o *ListStreamsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams][%d] listStreamsIdNotFound ", 404)
}

func (o *ListStreamsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
