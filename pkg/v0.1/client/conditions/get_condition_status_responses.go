// Code generated by go-swagger; DO NOT EDIT.

package conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetConditionStatusReader is a Reader for the GetConditionStatus structure.
type GetConditionStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConditionStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConditionStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetConditionStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConditionStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConditionStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConditionStatusOK creates a GetConditionStatusOK with default headers values
func NewGetConditionStatusOK() *GetConditionStatusOK {
	return &GetConditionStatusOK{}
}

/*GetConditionStatusOK handles this case with default header values.

JSON-formatted data about the status of the given condition
*/
type GetConditionStatusOK struct {
	Payload interface{}
}

func (o *GetConditionStatusOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusOK  %+v", 200, o.Payload)
}

func (o *GetConditionStatusOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConditionStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConditionStatusUnauthorized creates a GetConditionStatusUnauthorized with default headers values
func NewGetConditionStatusUnauthorized() *GetConditionStatusUnauthorized {
	return &GetConditionStatusUnauthorized{}
}

/*GetConditionStatusUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type GetConditionStatusUnauthorized struct {
	Payload interface{}
}

func (o *GetConditionStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConditionStatusUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConditionStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConditionStatusNotFound creates a GetConditionStatusNotFound with default headers values
func NewGetConditionStatusNotFound() *GetConditionStatusNotFound {
	return &GetConditionStatusNotFound{}
}

/*GetConditionStatusNotFound handles this case with default header values.

Project name is not found
*/
type GetConditionStatusNotFound struct {
	Payload interface{}
}

func (o *GetConditionStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetConditionStatusNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConditionStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConditionStatusInternalServerError creates a GetConditionStatusInternalServerError with default headers values
func NewGetConditionStatusInternalServerError() *GetConditionStatusInternalServerError {
	return &GetConditionStatusInternalServerError{}
}

/*GetConditionStatusInternalServerError handles this case with default header values.

The condition identifier is not valid
*/
type GetConditionStatusInternalServerError struct {
	Payload interface{}
}

func (o *GetConditionStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/conditions/{condition-id}/status][%d] getConditionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConditionStatusInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConditionStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
