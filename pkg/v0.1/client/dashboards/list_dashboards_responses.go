// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListDashboardsReader is a Reader for the ListDashboards structure.
type ListDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDashboardsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDashboardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListDashboardsOK creates a ListDashboardsOK with default headers values
func NewListDashboardsOK() *ListDashboardsOK {
	return &ListDashboardsOK{}
}

/*ListDashboardsOK handles this case with default header values.

JSON-formatted metadata about all dashboards in the project
*/
type ListDashboardsOK struct {
	Payload interface{}
}

func (o *ListDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/dashboards][%d] listDashboardsOK  %+v", 200, o.Payload)
}

func (o *ListDashboardsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ListDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardsUnauthorized creates a ListDashboardsUnauthorized with default headers values
func NewListDashboardsUnauthorized() *ListDashboardsUnauthorized {
	return &ListDashboardsUnauthorized{}
}

/*ListDashboardsUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListDashboardsUnauthorized struct {
	Payload interface{}
}

func (o *ListDashboardsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/dashboards][%d] listDashboardsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListDashboardsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ListDashboardsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardsNotFound creates a ListDashboardsNotFound with default headers values
func NewListDashboardsNotFound() *ListDashboardsNotFound {
	return &ListDashboardsNotFound{}
}

/*ListDashboardsNotFound handles this case with default header values.

Project name is not found
*/
type ListDashboardsNotFound struct {
	Payload interface{}
}

func (o *ListDashboardsNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/dashboards][%d] listDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *ListDashboardsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListDashboardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
