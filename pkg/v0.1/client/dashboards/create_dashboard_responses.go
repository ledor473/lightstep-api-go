// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateDashboardReader is a Reader for the CreateDashboard structure.
type CreateDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateDashboardOK creates a CreateDashboardOK with default headers values
func NewCreateDashboardOK() *CreateDashboardOK {
	return &CreateDashboardOK{}
}

/*CreateDashboardOK handles this case with default header values.

The dashboard was created (or updated) successfully
*/
type CreateDashboardOK struct {
	Payload interface{}
}

func (o *CreateDashboardOK) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/dashboards][%d] createDashboardOK  %+v", 200, o.Payload)
}

func (o *CreateDashboardOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDashboardBadRequest creates a CreateDashboardBadRequest with default headers values
func NewCreateDashboardBadRequest() *CreateDashboardBadRequest {
	return &CreateDashboardBadRequest{}
}

/*CreateDashboardBadRequest handles this case with default header values.

No organization parameter provided
*/
type CreateDashboardBadRequest struct {
	Payload interface{}
}

func (o *CreateDashboardBadRequest) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/dashboards][%d] createDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDashboardBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDashboardUnauthorized creates a CreateDashboardUnauthorized with default headers values
func NewCreateDashboardUnauthorized() *CreateDashboardUnauthorized {
	return &CreateDashboardUnauthorized{}
}

/*CreateDashboardUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type CreateDashboardUnauthorized struct {
	Payload interface{}
}

func (o *CreateDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/dashboards][%d] createDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateDashboardUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDashboardNotFound creates a CreateDashboardNotFound with default headers values
func NewCreateDashboardNotFound() *CreateDashboardNotFound {
	return &CreateDashboardNotFound{}
}

/*CreateDashboardNotFound handles this case with default header values.

Project name is not found
*/
type CreateDashboardNotFound struct {
	Payload interface{}
}

func (o *CreateDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /{organization}/projects/{project}/dashboards][%d] createDashboardNotFound  %+v", 404, o.Payload)
}

func (o *CreateDashboardNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
