// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSearchReader is a Reader for the DeleteSearch structure.
type DeleteSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSearchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSearchNoContent creates a DeleteSearchNoContent with default headers values
func NewDeleteSearchNoContent() *DeleteSearchNoContent {
	return &DeleteSearchNoContent{}
}

/*DeleteSearchNoContent handles this case with default header values.

Stream was successfully deleted
*/
type DeleteSearchNoContent struct {
	Payload interface{}
}

func (o *DeleteSearchNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/searches/{stream-id}][%d] deleteSearchNoContent  %+v", 204, o.Payload)
}

func (o *DeleteSearchNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteSearchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSearchUnauthorized creates a DeleteSearchUnauthorized with default headers values
func NewDeleteSearchUnauthorized() *DeleteSearchUnauthorized {
	return &DeleteSearchUnauthorized{}
}

/*DeleteSearchUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type DeleteSearchUnauthorized struct {
	Payload interface{}
}

func (o *DeleteSearchUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/searches/{stream-id}][%d] deleteSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteSearchUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSearchNotFound creates a DeleteSearchNotFound with default headers values
func NewDeleteSearchNotFound() *DeleteSearchNotFound {
	return &DeleteSearchNotFound{}
}

/*DeleteSearchNotFound handles this case with default header values.

Project name is not found
*/
type DeleteSearchNotFound struct {
	Payload interface{}
}

func (o *DeleteSearchNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{organization}/projects/{project}/searches/{stream-id}][%d] deleteSearchNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSearchNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
