// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ExternalLinkAttributes external link attributes
//
// swagger:model externalLinkAttributes
type ExternalLinkAttributes struct {

	// created by
	CreatedBy string `json:"created_by,omitempty"`

	// last clicked micros
	LastClickedMicros Micros `json:"last_clicked_micros,omitempty"`

	// last edited micros
	LastEditedMicros Micros `json:"last_edited_micros,omitempty"`

	// name
	Name Name `json:"name,omitempty"`

	// rules
	Rules Rules `json:"rules,omitempty"`

	// url
	URL URL `json:"url,omitempty"`
}

// Validate validates this external link attributes
func (m *ExternalLinkAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastClickedMicros(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastEditedMicros(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExternalLinkAttributes) validateLastClickedMicros(formats strfmt.Registry) error {

	if swag.IsZero(m.LastClickedMicros) { // not required
		return nil
	}

	if err := m.LastClickedMicros.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("last_clicked_micros")
		}
		return err
	}

	return nil
}

func (m *ExternalLinkAttributes) validateLastEditedMicros(formats strfmt.Registry) error {

	if swag.IsZero(m.LastEditedMicros) { // not required
		return nil
	}

	if err := m.LastEditedMicros.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("last_edited_micros")
		}
		return err
	}

	return nil
}

func (m *ExternalLinkAttributes) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	if err := m.Name.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("name")
		}
		return err
	}

	return nil
}

func (m *ExternalLinkAttributes) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(m.Rules) { // not required
		return nil
	}

	if err := m.Rules.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("rules")
		}
		return err
	}

	return nil
}

func (m *ExternalLinkAttributes) validateURL(formats strfmt.Registry) error {

	if swag.IsZero(m.URL) { // not required
		return nil
	}

	if err := m.URL.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("url")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExternalLinkAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExternalLinkAttributes) UnmarshalBinary(b []byte) error {
	var res ExternalLinkAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
