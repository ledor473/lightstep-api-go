// Code generated by go-swagger; DO NOT EDIT.

package conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ListConditionsForStreamReader is a Reader for the ListConditionsForStream structure.
type ListConditionsForStreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConditionsForStreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConditionsForStreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListConditionsForStreamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListConditionsForStreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListConditionsForStreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListConditionsForStreamOK creates a ListConditionsForStreamOK with default headers values
func NewListConditionsForStreamOK() *ListConditionsForStreamOK {
	return &ListConditionsForStreamOK{}
}

/*ListConditionsForStreamOK handles this case with default header values.

JSON-formatted metadata about all conditions in the given stream
*/
type ListConditionsForStreamOK struct {
}

func (o *ListConditionsForStreamOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams/{stream-id}/conditions][%d] listConditionsForStreamOK ", 200)
}

func (o *ListConditionsForStreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConditionsForStreamUnauthorized creates a ListConditionsForStreamUnauthorized with default headers values
func NewListConditionsForStreamUnauthorized() *ListConditionsForStreamUnauthorized {
	return &ListConditionsForStreamUnauthorized{}
}

/*ListConditionsForStreamUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListConditionsForStreamUnauthorized struct {
}

func (o *ListConditionsForStreamUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams/{stream-id}/conditions][%d] listConditionsForStreamUnauthorized ", 401)
}

func (o *ListConditionsForStreamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConditionsForStreamNotFound creates a ListConditionsForStreamNotFound with default headers values
func NewListConditionsForStreamNotFound() *ListConditionsForStreamNotFound {
	return &ListConditionsForStreamNotFound{}
}

/*ListConditionsForStreamNotFound handles this case with default header values.

Project name is not found
*/
type ListConditionsForStreamNotFound struct {
}

func (o *ListConditionsForStreamNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams/{stream-id}/conditions][%d] listConditionsForStreamNotFound ", 404)
}

func (o *ListConditionsForStreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConditionsForStreamInternalServerError creates a ListConditionsForStreamInternalServerError with default headers values
func NewListConditionsForStreamInternalServerError() *ListConditionsForStreamInternalServerError {
	return &ListConditionsForStreamInternalServerError{}
}

/*ListConditionsForStreamInternalServerError handles this case with default header values.

The stream identifier is not valid
*/
type ListConditionsForStreamInternalServerError struct {
}

func (o *ListConditionsForStreamInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams/{stream-id}/conditions][%d] listConditionsForStreamInternalServerError ", 500)
}

func (o *ListConditionsForStreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
