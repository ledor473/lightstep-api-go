// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ListStreamsReader is a Reader for the ListStreams structure.
type ListStreamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStreamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListStreamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListStreamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListStreamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListStreamsOK creates a ListStreamsOK with default headers values
func NewListStreamsOK() *ListStreamsOK {
	return &ListStreamsOK{}
}

/*ListStreamsOK handles this case with default header values.

JSON-formatted metadata about all streams in the project
*/
type ListStreamsOK struct {
	Payload interface{}
}

func (o *ListStreamsOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams][%d] listStreamsOK  %+v", 200, o.Payload)
}

func (o *ListStreamsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ListStreamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStreamsUnauthorized creates a ListStreamsUnauthorized with default headers values
func NewListStreamsUnauthorized() *ListStreamsUnauthorized {
	return &ListStreamsUnauthorized{}
}

/*ListStreamsUnauthorized handles this case with default header values.

The API Key does not provide access to this resource, or the organization name does not exist
*/
type ListStreamsUnauthorized struct {
	Payload interface{}
}

func (o *ListStreamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams][%d] listStreamsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListStreamsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ListStreamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStreamsNotFound creates a ListStreamsNotFound with default headers values
func NewListStreamsNotFound() *ListStreamsNotFound {
	return &ListStreamsNotFound{}
}

/*ListStreamsNotFound handles this case with default header values.

Project name is not found
*/
type ListStreamsNotFound struct {
	Payload interface{}
}

func (o *ListStreamsNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/streams][%d] listStreamsNotFound  %+v", 404, o.Payload)
}

func (o *ListStreamsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListStreamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
