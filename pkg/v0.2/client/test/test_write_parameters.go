// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewTestWriteParams creates a new TestWriteParams object
// with the default values initialized.
func NewTestWriteParams() *TestWriteParams {
	var ()
	return &TestWriteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTestWriteParamsWithTimeout creates a new TestWriteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTestWriteParamsWithTimeout(timeout time.Duration) *TestWriteParams {
	var ()
	return &TestWriteParams{

		timeout: timeout,
	}
}

// NewTestWriteParamsWithContext creates a new TestWriteParams object
// with the default values initialized, and the ability to set a context for a request
func NewTestWriteParamsWithContext(ctx context.Context) *TestWriteParams {
	var ()
	return &TestWriteParams{

		Context: ctx,
	}
}

// NewTestWriteParamsWithHTTPClient creates a new TestWriteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTestWriteParamsWithHTTPClient(client *http.Client) *TestWriteParams {
	var ()
	return &TestWriteParams{
		HTTPClient: client,
	}
}

/*TestWriteParams contains all the parameters to send to the API endpoint
for the test write operation typically these are written to a http.Request
*/
type TestWriteParams struct {

	/*Organization
	  Name of the customer organization

	*/
	Organization string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the test write params
func (o *TestWriteParams) WithTimeout(timeout time.Duration) *TestWriteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the test write params
func (o *TestWriteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the test write params
func (o *TestWriteParams) WithContext(ctx context.Context) *TestWriteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the test write params
func (o *TestWriteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the test write params
func (o *TestWriteParams) WithHTTPClient(client *http.Client) *TestWriteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the test write params
func (o *TestWriteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganization adds the organization to the test write params
func (o *TestWriteParams) WithOrganization(organization string) *TestWriteParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the test write params
func (o *TestWriteParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WriteToRequest writes these params to a swagger request
func (o *TestWriteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
