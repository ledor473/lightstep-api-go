// Code generated by go-swagger; DO NOT EDIT.

package workflow_links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ledor473/lightstep-api-go/pkg/v0.2/response"
)

// GetWorkflowLinkReader is a Reader for the GetWorkflowLink structure.
type GetWorkflowLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkflowLinkOK creates a GetWorkflowLinkOK with default headers values
func NewGetWorkflowLinkOK() *GetWorkflowLinkOK {
	return &GetWorkflowLinkOK{}
}

/*GetWorkflowLinkOK handles this case with default header values.

JSON-formatted metadata about the workflow link
*/
type GetWorkflowLinkOK struct {
	Payload response.GetWorkflowLink
}

func (o *GetWorkflowLinkOK) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/wf_links/{link-id}][%d] getWorkflowLinkOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowLinkOK) GetPayload() response.GetWorkflowLink {
	return o.Payload
}

func (o *GetWorkflowLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowLinkUnauthorized creates a GetWorkflowLinkUnauthorized with default headers values
func NewGetWorkflowLinkUnauthorized() *GetWorkflowLinkUnauthorized {
	return &GetWorkflowLinkUnauthorized{}
}

/*GetWorkflowLinkUnauthorized handles this case with default header values.

The API Key does not provide access to this resource
*/
type GetWorkflowLinkUnauthorized struct {
}

func (o *GetWorkflowLinkUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/wf_links/{link-id}][%d] getWorkflowLinkUnauthorized ", 401)
}

func (o *GetWorkflowLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowLinkNotFound creates a GetWorkflowLinkNotFound with default headers values
func NewGetWorkflowLinkNotFound() *GetWorkflowLinkNotFound {
	return &GetWorkflowLinkNotFound{}
}

/*GetWorkflowLinkNotFound handles this case with default header values.

Organization, project name, or workflow link ID is not found
*/
type GetWorkflowLinkNotFound struct {
}

func (o *GetWorkflowLinkNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/projects/{project}/wf_links/{link-id}][%d] getWorkflowLinkNotFound ", 404)
}

func (o *GetWorkflowLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
